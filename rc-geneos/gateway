#!/bin/bash
#
# Description: Geneos Gateway control script

GENEOS_HOME="/opt/geneos"

# import functions
if [ -f "${GENEOS_HOME}/etc/geneos/functions" ] ; then
    . "${GENEOS_HOME}/etc/geneos/functions"
fi

@include "${GENEOS_HOME}/.geneos_profile"
@include "${GENEOS_HOME}/.sqlserver_profile"


progname="gateway"
binary="${GENEOS_HOME}/${progname}/${progname}2.linux"
conffile="${CONFDIR}/${progname}/setup.xml"
logfile="${LOGDIR}/${progname}.log"
pidfile="${RUNDIR}/${progname}.pid"
args="-setup ${conffile} -log ${logfile}"

cd "${GENEOS_HOME}/${progname}" &>/dev/null || exit 127

function start () {

    if chkpidf "${pidfile}" ; then
        printf "%s" "Starting ${progname} service... "
        daemonise -c "unlimited" -p "${pidfile}" "${binary} ${args}"
        printf "%s\n" "(pid ${!})"
        return 0
    fi

    status
    return 1
}

function stop () {

    printf "%s" "Shutting down ${progname} service... "
    killpgid -p "${pidfile}"

    RET="${?}"

    case "${RET}" in
        0)
            printf "%s\n" "stopped."
        ;;
        *)
            printf "%s\n" "not running."
        ;;
    esac

    return "${RET}"
}

function restart () {

    stop
    start
}

function status () {

    local pid=

    if chkpidf "${pidfile}" ; then
        printf "%s\n" "${progname} service is stopped."
    else
        printf "%s" "${progname} service is running... (pid "
        while read pid ; do
            printf "%s" "${pid} "
        done < "${pidfile}"
        printf "%s\n" ")"
    fi
    return 0
}

function control () {

    case "${1}" in
        start)
            start
            shift
        ;;
        stop)
            stop
            shift
        ;;
        restart)
            restart
            shift
        ;;
        status)
            status
            shift
        ;;
        *)
            printf "%s\n" "${progname}: Usage {start|stop|restart|status}"
            return 1
        ;;
    esac
}

function main () {

    control ${*}
}

main ${*}
